{"ast":null,"code":"var _jsxFileName = \"/root/stylus/StampNet/frontend/src/components/Auth/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"boxicons/css/boxicons.min.css\";\nimport \"../../styles/authstyle.css\"; // Ensure correct path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [showPassword, setShowPassword] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"authLogin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"authLogin-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"authLogin-title\",\n        children: \"Hello Again!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"authLogin-description\",\n        children: \"Let's get started with uploading your media.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"authLogin-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"Email\",\n            className: \"authLogin-input\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bx bx-envelope\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"authLogin-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: showPassword ? \"text\" : \"password\",\n            placeholder: \"Password\",\n            className: \"authLogin-input\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: `bx ${showPassword ? \"bx-show\" : \"bx-hide\"}`,\n            onClick: () => setShowPassword(!showPassword),\n            style: {\n              cursor: \"pointer\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/forgot-password\",\n          className: \"authLogin-recovery\",\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"authLogin-button\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"authLogin-illustration\",\n      children: \"StampNet Logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"daguiRHWMFkqPgCh/ppD7CF5VuQ=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","showPassword","setShowPassword","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","placeholder","required","onClick","style","cursor","href","_c","$RefreshReg$"],"sources":["/root/stylus/StampNet/frontend/src/components/Auth/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"boxicons/css/boxicons.min.css\";\nimport \"../../styles/authstyle.css\"; // Ensure correct path\n\nconst Login = () => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  return (\n    <div className=\"authLogin-container\">\n      <div className=\"authLogin-box\">\n        <h2 className=\"authLogin-title\">Hello Again!</h2>\n        <p className=\"authLogin-description\">\n          Let's get started with uploading your media.\n        </p>\n        <form>\n          <div className=\"authLogin-input-container\">\n            <input type=\"email\" name=\"email\" placeholder=\"Email\" className=\"authLogin-input\" required />\n            <i className=\"bx bx-envelope\"></i>\n          </div>\n          <div className=\"authLogin-input-container\">\n            <input\n              type={showPassword ? \"text\" : \"password\"}\n              placeholder=\"Password\"\n              className=\"authLogin-input\"\n              required\n            />\n            <i\n              className={`bx ${showPassword ? \"bx-show\" : \"bx-hide\"}`}\n              onClick={() => setShowPassword(!showPassword)}\n              style={{ cursor: \"pointer\" }}\n            ></i>\n          </div>\n          <a href=\"/forgot-password\" className=\"authLogin-recovery\">Forgot Password?</a>\n          <button type=\"submit\" className=\"authLogin-button\">Sign In</button>\n        </form>\n      </div>\n      <div className=\"authLogin-illustration\">StampNet Logo</div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
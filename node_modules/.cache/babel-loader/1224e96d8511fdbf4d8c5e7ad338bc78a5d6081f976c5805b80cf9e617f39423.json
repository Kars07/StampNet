{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nconst useScrollBlur = () => {\n  _s();\n  useEffect(() => {\n    const handleScroll = () => {\n      const content = document.querySelector(\".main-content\");\n      if (window.scrollY > 50) {\n        // Start blurring after scrolling 50px\n        content.classList.add(\"scrolling\");\n      } else {\n        content.classList.remove(\"scrolling\");\n      }\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n};\n_s(useScrollBlur, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nexport default useScrollBlur;","map":{"version":3,"names":["useEffect","useScrollBlur","_s","handleScroll","content","document","querySelector","window","scrollY","classList","add","remove","addEventListener","removeEventListener"],"sources":["/root/stylus/StampNet/frontend/src/hooks/useScrollBlur.js"],"sourcesContent":["import { useEffect } from \"react\";\n\nconst useScrollBlur = () => {\n    useEffect(() => {\n        const handleScroll = () => {\n            const content = document.querySelector(\".main-content\");\n            if (window.scrollY > 50) { // Start blurring after scrolling 50px\n                content.classList.add(\"scrolling\");\n            } else {\n                content.classList.remove(\"scrolling\");\n            }\n        };\n\n        window.addEventListener(\"scroll\", handleScroll);\n        return () => window.removeEventListener(\"scroll\", handleScroll);\n    }, []);\n};\n\nexport default useScrollBlur;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AAEjC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxBF,SAAS,CAAC,MAAM;IACZ,MAAMG,YAAY,GAAGA,CAAA,KAAM;MACvB,MAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAa,CAAC,eAAe,CAAC;MACvD,IAAIC,MAAM,CAACC,OAAO,GAAG,EAAE,EAAE;QAAE;QACvBJ,OAAO,CAACK,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;MACtC,CAAC,MAAM;QACHN,OAAO,CAACK,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC;MACzC;IACJ,CAAC;IAEDJ,MAAM,CAACK,gBAAgB,CAAC,QAAQ,EAAET,YAAY,CAAC;IAC/C,OAAO,MAAMI,MAAM,CAACM,mBAAmB,CAAC,QAAQ,EAAEV,YAAY,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;AACV,CAAC;AAACD,EAAA,CAdID,aAAa;AAgBnB,eAAeA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}